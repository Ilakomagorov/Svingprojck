/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.komagorovis1;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JMenuBar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.JTabbedPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.UIManager;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import java.awt.EventQueue;

import java.util.Random;

import java.util.ArrayList;
import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;

import java.io.*;

/**
 *
 * @author Student
 */
public class App extends javax.swing.JFrame {

    /**
     * Creates new form App
     */
    public App() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jTextField9 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jTextField17 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane3.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel1.setText("В заданном массиве найти максимальный элемент. Элементы, стоящие после максимального элемента заменить нулями.");

        jLabel2.setText("Исходный масив");

        jLabel3.setText("Массив после замены");

        jButton1.setText("Решить");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addGap(18, 18, 18)
                            .addComponent(jTextField2))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(41, 41, 41)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 88, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(138, 138, 138))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addComponent(jButton1)
                .addContainerGap(506, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("9", jPanel4);

        jLabel4.setText("Случайно сгенерированный массив");

        jLabel5.setText("Количество положительных элементов");

        jLabel6.setText("Заполнить массив А[1..6] случайными числами в диапазоне -6 до 6. Найти количество положительных элементов.");

        jButton2.setText("Решить");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 118, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(21, 21, 21)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jButton2)
                .addContainerGap(517, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("34", jPanel10);

        jLabel7.setText(" В одномерном массиве хранится информация о коммунальных платежах каждой из семей 20-квартирного дома за месяц.");

        jLabel8.setText(" Определить: а) общую сумму платежей; б) номера квартир, которые не оплатили коммунальные услуги;");

        jLabel9.setText("в) номера квартир, платежи которых превысили заданное значение.");

        jLabel10.setText("Случайно сгенерированные коммунальные платежи:");

        jLabel11.setText("Введите заданное значение для сравнения платежей: ");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jButton3.setText("Решить");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setText("Общая сумма платежей");

        jLabel13.setText("Номера квартир, платежи которых превысили заданное значение");

        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel24.setText("Номера квартив которые оплатили:");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField5))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField7))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 84, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(33, 33, 33))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton3)
                .addContainerGap(408, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("59", jPanel11);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane3)
        );

        jTabbedPane1.addTab("Раздел№1", jPanel1);

        jTabbedPane4.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel14.setText("Дана матрица NхN. Вывести на экран дисплея элементы той строки, сумма элементов которой максимальна.");

        jLabel15.setText("Исходный массив");

        jLabel16.setText("Введите число n");

        jButton4.setText("Решить");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Заголовок 4", "Заголовок 5"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel25.setText("Изменение матрицы");

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Заголовок 5"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(71, 71, 71)
                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel25)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 553, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(405, 405, 405)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(302, 302, 302))
        );

        jTabbedPane4.addTab("9", jPanel5);

        jLabel17.setText("<html>34. Вывести на экран матрицу 10x8, элементами которой являются целые случайные числа из интервала [19,49].<br> Определить минимальный элемент в каждом столбце и выбрать из них максимальный.");

        jButton5.setText("Решить");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel26.setText("Определенное число:");

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Заголовок 5", "Заголовок 6", "Заголовок 7", "Заголовок 8", "Заголовок 9", "Заголовок 10"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(232, 232, 232)
                        .addComponent(jButton5))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(525, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(276, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("34", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4)
        );

        jTabbedPane1.addTab("Раздел№2", jPanel2);

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jLabel19.setText(" Определить размер каждого слова из заданного текста (слова разделены пробелами).");

        jButton6.setText("Решить");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel27.setText("Строка текста:");

        jLabel28.setText("Размер каждого слова");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addGap(0, 648, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(432, 432, 432)
                        .addComponent(jButton6))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField15, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                            .addComponent(jTextField14))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(102, 102, 102)
                .addComponent(jButton6)
                .addContainerGap(469, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("9", jPanel7);

        jLabel20.setText("Определить наименьшую из цифр, занимающих во введенной строке четные позиции.");

        jLabel21.setText("Ввести строку");

        jButton7.setText("Решить");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel29.setText("Наименьшая цифра:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(469, 469, 469)
                .addComponent(jButton7)
                .addContainerGap(559, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel21))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
                            .addComponent(jTextField11))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel20)
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jButton7)
                .addContainerGap(513, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("34", jPanel8);

        jLabel22.setText("Создать процедуру, позволяющую из заданной строки удалить пробелы.");

        jLabel23.setText("Исходная строка");

        jButton8.setText("Рещить");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });

        jLabel30.setText("Измененная строка");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton8)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel30))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField17)
                            .addComponent(jTextField12))))
                .addGap(637, 637, 637))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(jButton8)
                .addContainerGap(563, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("59", jPanel9);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );

        jTabbedPane1.addTab("Раздел№3", jPanel3);

        jMenu1.setText("Файл");

        jMenuItem1.setText("Выход");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Справка");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
      System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
                                        
    jTextField1.setText(""); // Поле для исходного массива
    jTextField2.setText(""); // Поле для измененного массива

    System.out.println("9. В заданном массиве найти максимальный элемент. Элементы, стоящие после\n" +
"максимального элемента заменить нулями.");                                      

    int size = 10;

    // Создаем объект Random для генерации случайных чисел
    Random random = new Random();

    // Инициализируем массив заданного размера
    int[] array = new int[size];

    // Заполняем массив случайными числами от 0 до 99
    for (int i = 0; i < array.length; i++) {
        array[i] = random.nextInt(100);
    }

    // Формируем строку для исходного массива без дополнительных описаний
    StringBuilder originalArrayText = new StringBuilder();
    for (int num : array) {
        originalArrayText.append(num).append(" ");
    }

    // Выводим исходный массив в консоль и GUI
    System.out.println(originalArrayText.toString().trim());
    jTextField1.setText(originalArrayText.toString().trim());

    // Находим максимальный элемент в массиве и его индекс
    int maxElement = array[0]; // Предполагаем, что первый элемент максимальный
    int maxIndex = 0; // Индекс максимального элемента

    // Проходим по массиву, начиная со второго элемента
    for (int i = 1; i < array.length; i++) {
        if (array[i] > maxElement) { // Если текущий элемент больше максимума
            maxElement = array[i]; // Обновляем значение максимума
            maxIndex = i; // Обновляем индекс максимума
        }
    }

    // Заменяем все элементы после максимального на нули
    for (int i = maxIndex + 1; i < array.length; i++) {
        array[i] = 0;
    }

    // Формируем строку для измененного массива без дополнительных описаний
    StringBuilder modifiedArrayText = new StringBuilder();
    for (int num : array) {
        modifiedArrayText.append(num).append(" ");
    }

    // Выводим измененный массив в консоль и GUI
    System.out.println(modifiedArrayText.toString().trim());
    jTextField2.setText(modifiedArrayText.toString().trim());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 

        System.out.println("34. Заполнить массив А[1..6] случайными числами в диапазоне -6 до 6. Найти количество положительных элементов.");
        jTextField3.setText("");

        int size = 6; // Размер массива (количество элементов)
        int[] A = new int[size]; // Создаем массив A размером 6 элементов

        Random random = new Random(); // Создаем объект Random для генерации случайных чисел

        jTextField3.setText(jTextField3.getText());
        System.out.println("Случайно сгенерированный массив:");

        // Заполняем массив случайными числами в диапазоне от -6 до 6
        for (int i = 0; i < size; i++) {
            A[i] = random.nextInt(13) - 6;
            
            jTextField3.setText(jTextField3.getText() + A[i] + " ");
            System.out.print(A[i] + " "); // Выводим каждый элемент массива в консоль
        }

        // Переходим на новую строку после вывода массива
        System.out.println();
        jTextField4.setText("");

        int positiveCount = 0; // Переменная для подсчета количества положительных элементов

        // Проходим по каждому элементу массива
        for (int num : A) {
            if (num > 0) { // Проверяем, является ли текущий элемент положительным
                positiveCount++; // Если да, увеличиваем счетчик положительных элементов
            }
        }

        // Выводим результат: количество положительных элементов
        jTextField4.setText(jTextField4.getText() + positiveCount);
        System.out.println("Количество положительных элементов: " + positiveCount);
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                                    
   // Очищаем текстовые поля перед новым выполнением
    jTextField5.setText(""); // Поле для случайно сгенерированных платежей
    jTextField6.setText(""); // Поле для ввода заданного значения
    jTextField7.setText(""); // Поле для общей суммы платежей
    jTextField13.setText(""); // Поле для номеров квартир с нулевыми платежами
    jTextField8.setText(""); // Поле для номеров квартир с платежами, превышающими заданное значение

    // Выводим описание задачи в консоль
    System.out.println("59. В одномерном массиве хранится информация о коммунальных платежах\n" +
                       "каждой из семей 20-квартирного дома за месяц. Определить: а) общую сумму\n" +
                       "платежей; б) номера квартир, которые не оплатили коммунальные услуги; в)\n" +
                       "номера квартир, платежи которых превысили заданное значение.");

    int size = 20; // Устанавливаем количество квартир (размер массива)
    double[] payments = new double[size]; // Создаем массив для хранения платежей каждой квартиры

    Random random = new Random(); // Создаем объект Random для генерации случайных чисел

    // Генерируем случайные значения платежей для каждой квартиры
    StringBuilder generatedPaymentsText = new StringBuilder("Случайно сгенерированные коммунальные платежи:\n");
    for (int i = 0; i < size; i++) {
        payments[i] = random.nextInt(3801); // Генерируем число от 0 до 3800 как платеж для квартиры
        generatedPaymentsText.append(String.format("Квартира %d: %.2f%n", (i + 1), payments[i])); // Добавляем строку для GUI
        System.out.printf("Квартира %d: %.2f%n", (i + 1), payments[i]); // Выводим платеж для каждой квартиры в консоль
    }

    // Устанавливаем сгенерированные платежи в GUI
    jTextField5.setText(generatedPaymentsText.toString());

    // Вычисляем общую сумму всех платежей
    double totalSum = 0;
    for (double payment : payments) {
        totalSum += payment; // Суммируем все платежи
    }
    System.out.println("\nОбщая сумма платежей: " + totalSum); // Выводим общую сумму в консоль
    jTextField7.setText("Общая сумма платежей: " + totalSum); // Устанавливаем общую сумму в GUI

    // Находим номера квартир, которые не оплатили коммунальные услуги
    List<Integer> unpaidApartments = new ArrayList<>(); // Создаем список для хранения номеров таких квартир
    for (int i = 0; i < size; i++) {
        if (payments[i] == 0) { // Если платеж равен 0, значит, квартира не оплатила услуги
            unpaidApartments.add(i + 1); // Добавляем номер квартиры в список
        }
    }

    // Проверяем, есть ли квартиры, которые не оплатили услуги
    if (unpaidApartments.isEmpty()) {
        System.out.println("Все квартиры оплатили коммунальные услуги."); // Если список пуст, выводим соответствующее сообщение
        jTextField13.setText("Все квартиры оплатили коммунальные услуги.");
    } else {
        System.out.print("Номера квартир, которые не оплатили коммунальные услуги: "); // В противном случае выводим номера квартир
        for (int apartment : unpaidApartments) {
            System.out.print(apartment + " "); // Выводим каждый номер квартиры
        }
        System.out.println();

        // Формируем строку для GUI
        String unpaidApartmentsText = "Номера квартир, которые не оплатили коммунальные услуги: ";
        for (int apartment : unpaidApartments) {
            unpaidApartmentsText += apartment + " ";
        }
        jTextField13.setText(unpaidApartmentsText);
    }

    // Запрашиваем у пользователя заданное значение для сравнения платежей
    double threshold = Double.parseDouble(jTextField6.getText()); // Получаем значение из JTextField

    // Находим номера квартир, чьи платежи превышают заданное значение
    List<Integer> highPaymentsApartments = new ArrayList<>(); // Создаем список для хранения таких номеров квартир
    for (int i = 0; i < size; i++) {
        if (payments[i] > threshold) { // Если платеж больше заданного значения
            highPaymentsApartments.add(i + 1); // Добавляем номер квартиры в список
        }
    }

    // Проверяем, есть ли квартиры, чьи платежи превысили заданное значение
    if (highPaymentsApartments.isEmpty()) {
        System.out.println("Нет квартир, чьи платежи превысили заданное значение."); // Если список пуст, выводим соответствующее сообщение
        jTextField8.setText("Нет квартир, чьи платежи превысили заданное значение.");
    } else {
        System.out.print("Номера квартир, платежи которых превысили заданное значение: "); // В противном случае выводим номера квартир
        for (int apartment : highPaymentsApartments) {
            System.out.print(apartment + " "); // Выводим каждый номер квартиры
        }
        System.out.println();

        // Формируем строку для GUI
        String highPaymentsApartmentsText = "Номера квартир, платежи которых превысили заданное значение: ";
        for (int apartment : highPaymentsApartments) {
            highPaymentsApartmentsText += apartment + " ";
        }
        jTextField8.setText(highPaymentsApartmentsText);
    }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
      // Очищаем таблицы перед новым выполнением
    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {},
        new String[] {"Title 1", "Title 2", "Title 3", "Title 4", "Title 5"}
    ));
    
    jTable3.setModel(new javax.swing.table.DefaultTableModel(
        new Object[][] {},
        new String[] {"Title 1", "Title 2", "Title 3", "Title 4", "Title 5"}
    ));

    // Вывод нового задания
    System.out.println("Задание 34: Вывести на экран матрицу 10x8, элементами которой являются целые");
    System.out.println("случайные числа из интервала [19,49]. Определить минимальный элемент в");
    System.out.println("каждом столбце и выбрать из них максимальный.\n");

    // Вывод исходного задания
    System.out.println("Задание: В двумерном массиве числа, кратные n, заменить частными от деления на n.");
    System.out.println("Если таких чисел нет, то вывести на экран сообщение об этом.\n");

    // Исходная матрица
    int[][] array = {
        {12, 15, 20, 25, 30},
        {8, 16, 24, 32, 40},
        {5, 10, 15, 20, 25},
        {7, 14, 21, 28, 35}
    };

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        for (int i = 0; i < array.length; i++) {
            // Преобразуем строку матрицы array[i] в Object[]
            Object[] row = new Object[array[i].length];
            for (int j = 0; j < array[i].length; j++) {
                row[j] = array[i][j]; // Копируем значение из int[] в Object[]
            }
            model.addRow(row); // Добавляем строку в таблицу
        }
    // Получаем число n из jPasswordField1
    String nText = new String(jTextField9.getText());
    if (nText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Введите число n!");
        return;
    }
    int n = Integer.parseInt(nText);

    // Размеры матрицы
    int rows = array.length;
    int cols = array[0].length;

    // Создаем новую матрицу для измененных значений
    double[][] modifiedArray = new double[rows][cols];
    boolean found = false;

    // Проходим по каждому элементу матрицы
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (array[i][j] % n == 0) { 
                modifiedArray[i][j] = (double) array[i][j] / n;
                found = true; 
            } else {
                modifiedArray[i][j] = array[i][j];
            }
        }
    }

    // Если не найдено ни одного числа, кратного n
    if (!found) {
        JOptionPane.showMessageDialog(this, "В массиве нет чисел, кратных " + n + ".");
    } else {
        // Заполняем jTable3 измененной матрицей
        DefaultTableModel modifiedModel = (DefaultTableModel) jTable3.getModel();
        for (int i = 0; i < rows; i++) {
            Object[] row = new Object[cols];
            for (int j = 0; j < cols; j++) {
                row[j] = modifiedArray[i][j];
            }
            modifiedModel.addRow(row);
        }
    }  
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
  // Очищаем таблицу перед новым выполнением
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0); // Очистка таблицы

        // Задание: Вывести матрицу 10x8 с элементами из диапазона [19, 49]
        // Найти минимальные значения в каждом столбце и определить максимальное среди них.

        // Определяем количество строк и столбцов матрицы
        int rows = 10;
        int cols = 8;

        // Создаем двумерный массив (матрицу) размером 10x8
        int[][] matrix = new int[rows][cols];

        // Инициализируем объект Random для генерации случайных чисел
        Random random = new Random();

        // Заполняем матрицу случайными числами из диапазона [19, 49]
        for (int i = 0; i < rows; i++) {
            Object[] row = new Object[cols];
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = random.nextInt(31) + 19; // Генерация числа от 19 до 49
                row[j] = matrix[i][j]; // Добавляем значение в строку для jTable4
            }
            model.addRow(row); // Добавляем строку в jTable4
        }

        // Находим минимальные значения в каждом столбце матрицы
        int[] minInColumns = new int[cols]; // Массив для хранения минимальных значений каждого столбца

        // Проходим по каждому столбцу матрицы
        for (int j = 0; j < cols; j++) {
            minInColumns[j] = matrix[0][j]; // Предполагаем, что первый элемент столбца является минимальным

            // Сравниваем остальные элементы столбца с текущим минимумом
            for (int i = 1; i < rows; i++) {
                if (matrix[i][j] < minInColumns[j]) { // Если найден меньший элемент
                    minInColumns[j] = matrix[i][j]; // Обновляем минимальное значение для этого столбца
                }
            }
        }

        // Находим максимальное значение среди минимальных значений столбцов
        int maxOfMin = minInColumns[0]; // Предполагаем, что минимальное значение первого столбца является максимальным

        // Сравниваем минимальные значения других столбцов с текущим максимумом
        for (int j = 1; j < cols; j++) {
            if (minInColumns[j] > maxOfMin) { // Если найдено большее значение
                maxOfMin = minInColumns[j]; // Обновляем максимальное значение
            }
        }

        // Выводим результат в jTextField10
        jTextField10.setText("Максимальный элемент среди минимальных значений столбцов: " + maxOfMin);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
 // Очищаем поле вывода перед новым выполнением
        jTextField15.setText("");

        // Задание: Определить размер каждого слова из заданного текста (слова разделены пробелами).
        System.out.println("9. Определить размер каждого слова из заданного текста (слова разделены пробелами).");

        // Считываем текст из jTextField14
        String text = jTextField14.getText();

        // Проверяем, что текст не пустой
        if (text == null || text.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Введите текст в поле ввода!");
            return;
        }

        // Разделяем текст на массив слов, используя пробел как разделитель
        String[] words = text.split(" ");

        // Создаем StringBuilder для формирования результата
        StringBuilder result = new StringBuilder();

        // Проходим по каждому слову в массиве words
        for (String word : words) {
            if (!word.isEmpty()) { // Пропускаем пустые строки (на случай лишних пробелов)
                result.append("Слово: ").append(word).append(", Длина: ").append(word.length()).append("\n");
            }
        }

        // Выводим результат в jTextField15
        jTextField15.setText(result.toString());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    // Очищаем поле вывода перед новым выполнением
        jTextField16.setText("");

        // Задание: Определить наименьшую из цифр, занимающих во введенной строке четные позиции.
        System.out.println("34. Определить наименьшую из цифр, занимающих во введенной строке четные позиции.");

        // Считываем строку из jTextField11
        String input = jTextField11.getText();

        // Проверяем, что строка не пустая
        if (input == null || input.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Введите строку!");
            return;
        }

        // Инициализируем переменную minDigit максимальным значением целого числа
        int minDigit = Integer.MAX_VALUE;

        // Флаг для проверки наличия хотя бы одной цифры на четных позициях
        boolean hasDigit = false;

        // Проходим по символам строки, начиная с индекса 0
        for (int i = 0; i < input.length(); i++) {
            // Проверяем, является ли текущая позиция нечетной (так как позиции считаются с 1)
            if (i % 2 != 0) { 
                // Получаем символ на текущей позиции
                char ch = input.charAt(i);

                // Проверяем, является ли символ цифрой
                if (Character.isDigit(ch)) {
                    // Устанавливаем флаг hasDigit в true, так как найдена хотя бы одна цифра
                    hasDigit = true;

                    // Преобразуем символ в числовое значение
                    int digit = Character.getNumericValue(ch);

                    // Если текущее число меньше minDigit, обновляем minDigit
                    if (digit < minDigit) {
                        minDigit = digit;
                    }
                }
            }
        }

        // Если была найдена хотя бы одна цифра на четных позициях, выводим результат
        if (hasDigit) {
            jTextField16.setText("Наименьшая цифра на чётных позициях: " + minDigit);
        } else {
            // Если цифр на четных позициях не найдено, выводим соответствующее сообщение
            jTextField16.setText("Цифр на чётных позициях не найдено.");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // Очищаем поле вывода перед новым выполнением
        jTextField12.setText("");

        // Задание: Создать процедуру, позволяющую из заданной строки удалить пробелы.
        System.out.println("59. Создать процедуру, позволяющую из заданной строки удалить пробелы.");

        // Считываем исходную строку из jTextField17
        String input = jTextField17.getText();

        // Проверяем, что строка не пустая
        if (input == null || input.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Введите строку в поле ввода!");
            return;
        }

        // Удаляем все пробелы из строки с помощью метода removeSpaces
        String result = removeSpaces(input);

        // Выводим результат в jTextField12
        jTextField12.setText(result);
        
    }//GEN-LAST:event_jButton8ActionPerformed
     // Метод для удаления всех пробелов из строки
    public static String removeSpaces(String input) {
        // Если строка null или пустая, возвращаем пустую строку
        if (input == null || input.isEmpty()) {
            return "";
        }

        // Используем метод replaceAll() для удаления всех пробельных символов
        return input.replaceAll("\\s+", ""); 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
